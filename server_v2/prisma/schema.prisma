// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum LifeCycleStatus {
  ACTIVE  @map("active")
  DISABLE @map("disable")
  PENDING @map("pending")
  DELETE  @map("delete")
}

model Login {
  id                   Int             @id @default(autoincrement())
  // ownId                Int         @relation()
  email                String          @unique
  password             String
  verifyCode           String?
  verifyCodeAt         DateTime?
  isEmailLoginVerified Boolean         @default(false)
  status               LifeCycleStatus @default(PENDING)

  retrieveToken         String?
  retrieveTokenExpireAt DateTime?
  lastLoginAt           DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("login")
}

model PersonalRelationship {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  status      LifeCycleStatus @default(ACTIVE)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@map("personal_relationship")
}

model Currency {
  id        Int             @id @default(autoincrement())
  isoCode   String          @unique
  numCode   String          @unique
  decimal   Int
  name      String
  status    LifeCycleStatus @default(ACTIVE)
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt

  @@map("currency")
}

model Country {
  id          Int             @id @default(autoincrement())
  iso2Code    String          @unique
  iso3Code    String          @unique
  numCode     String          @unique
  name        String
  status      LifeCycleStatus @default(ACTIVE)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  Institution Institution[]
  Region      Region[]

  @@map("country")
}

model Region {
  id          Int             @id @default(autoincrement())
  isoCode     String
  name        String
  abbr        String
  countryCode String
  country     Country         @relation(fields: [countryCode], references: [iso2Code])
  status      LifeCycleStatus @default(ACTIVE)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@map("region")
}

model Institution {
  id             Int             @id @default(autoincrement())
  countryCode    String
  country        Country         @relation(fields: [countryCode], references: [iso2Code])
  abbr           String
  name           String
  institutionNum String
  status         LifeCycleStatus @default(ACTIVE)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  @@map("institution")
}

model occupation {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  status      LifeCycleStatus @default(ACTIVE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("occupation")
}
