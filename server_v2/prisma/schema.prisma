// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum LifeCycleStatus {
  ACTIVE  @map("active")
  DISABLE @map("disable")
  PENDING @map("pending")
  DELETE  @map("delete")
}

model Login {
  id                   Int             @id @default(autoincrement())
  owner                User            @relation(fields: [ownerId], references: [id])
  ownerId              Int
  email                String          @unique
  password             String
  verifyCode           String?
  verifyCodeAt         DateTime?
  isEmailLoginVerified Boolean         @default(false)
  status               LifeCycleStatus @default(PENDING)

  retrieveToken         String?
  retrieveTokenExpireAt DateTime?
  lastLoginAt           DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("login")
}

// firstName varchar(255) not null,
// middleName varchar(255),
// lastName varchar(255) not null,
// dob date not null,
// address1 varchar(255),
// address2 varchar(255),
// province varchar(8) references region(isoCode),
// country varchar(4) references country(isoCode),
// postCode varchar(64),
// phoneNumber varchar(64),
// pob varchar(4) references country(isoCode),
// nationality varchar(4) references country(isoCode),
model User {
  id Int @id @default(autoincrement())

  firstName       String
  middleName      String?
  lastName        String
  dob             DateTime
  address1        String
  address2        String?
  regionCode      String
  region          Region   @relation(fields: [regionCode], references: [isoCode])
  countryCode     String
  country         Country  @relation(fields: [countryCode], references: [iso2Code])
  postCode        String
  phoneNumber     String
  pobCode         String // strict it on sql schema
  nationalityCode String // strict it on sql schema
  Login           Login[] // only support one way login

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Identification Identification[]

  @@map("user")
}

model Identification {
  id      Int    @id @default(autoincrement())
  ownerId Int
  owner   User   @relation(fields: [ownerId], references: [id])
  type    String
  num     String

  status LifeCycleStatus

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("identification")
}

model PersonalRelationship {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  status      LifeCycleStatus @default(ACTIVE)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@map("personal_relationship")
}

model Currency {
  id        Int             @id @default(autoincrement())
  isoCode   String          @unique
  numCode   String          @unique
  decimal   Int
  name      String
  status    LifeCycleStatus @default(ACTIVE)
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt

  @@map("currency")
}

model Country {
  id          Int             @id @default(autoincrement())
  iso2Code    String          @unique
  iso3Code    String          @unique
  numCode     String          @unique
  name        String
  status      LifeCycleStatus @default(ACTIVE)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  Institution Institution[]
  Region      Region[]
  User        User[]

  @@map("country")
}

model Region {
  id          Int             @id @default(autoincrement())
  isoCode     String          @unique
  name        String
  abbr        String
  countryCode String
  country     Country         @relation(fields: [countryCode], references: [iso2Code])
  status      LifeCycleStatus @default(ACTIVE)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  User        User[]

  @@map("region")
}

model Institution {
  id             Int             @id @default(autoincrement())
  countryCode    String
  country        Country         @relation(fields: [countryCode], references: [iso2Code])
  abbr           String
  name           String
  institutionNum String
  status         LifeCycleStatus @default(ACTIVE)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  @@map("institution")
}

model occupation {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  status      LifeCycleStatus @default(ACTIVE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("occupation")
}

// create table notification(
//     id serial primary key,
//     ownerId int not null references user(id),
//     level enum('info', 'warming', 'error') default 'info',
//     subject varchar(250) null,
//     content varchar(250) null,
//     status enum('read', 'unread') default 'unread',
//     createdAt timestamp default current_timestamp,
//     updatedAt timestamp default current_timestamp on update current_timestamp
// );
